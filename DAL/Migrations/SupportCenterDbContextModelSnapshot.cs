// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SC.DAL.EF;

namespace SC.DAL.Migrations
{
    [DbContext(typeof(SupportCenterDbContext))]
    partial class SupportCenterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("SC.BL.Domain.Ticket", b =>
                {
                    b.Property<int>("TicketNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountID");

                    b.Property<DateTime>("DateOpened");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("State");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("TicketNumber");

                    b.HasIndex("State");

                    b.ToTable("Tickets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ticket");
                });

            modelBuilder.Entity("SC.BL.Domain.TicketResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsClientResponse");

                    b.Property<string>("Text");

                    b.Property<int?>("TicketFK");

                    b.HasKey("Id");

                    b.HasIndex("TicketFK");

                    b.ToTable("TicketResponses");
                });

            modelBuilder.Entity("SC.BL.Domain.HardwareTicket", b =>
                {
                    b.HasBaseType("SC.BL.Domain.Ticket");

                    b.Property<string>("DeviceName");

                    b.ToTable("HardwareTicket");

                    b.HasDiscriminator().HasValue("HardwareTicket");
                });

            modelBuilder.Entity("SC.BL.Domain.TicketResponse", b =>
                {
                    b.HasOne("SC.BL.Domain.Ticket", "Ticket")
                        .WithMany("Responses")
                        .HasForeignKey("TicketFK");
                });
#pragma warning restore 612, 618
        }
    }
}
